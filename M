import numpy as np
import matplotlib.pyplot as plt

# Parameters
par_rate = 0.03  # Fixed rate (par rate)
discount_values_fixed = [0.98, 0.96, 0.94, 0.92, 0.90]  # Discount factors for fixed leg (semi-annual payments)
discount_values_floating = [0.98, 0.975, 0.97, 0.965, 0.96, 0.955, 0.95, 0.945, 0.94, 0.935]  # Floating leg (quarterly payments)
forward_rates = [0.025, 0.026, 0.027, 0.028, 0.029, 0.030, 0.031, 0.032, 0.033, 0.034]  # Forward rates for floating payments
fixed_freq = 2  # Fixed leg payment frequency per year (semi-annual)
floating_freq = 4  # Floating leg payment frequency per year (quarterly)
notional = 1000000  # Notional amount of the swap
swap_duration = 5  # Swap duration in years

# Cash flow times
fixed_times = np.arange(1 / fixed_freq, swap_duration + 1 / fixed_freq, 1 / fixed_freq)
floating_times = np.arange(1 / floating_freq, swap_duration + 1 / floating_freq, 1 / floating_freq)

# Fixed and Floating Leg Cash Flows
fixed_cash_flows = np.full(len(fixed_times), par_rate * notional / fixed_freq)
floating_cash_flows = np.array(forward_rates) * notional / floating_freq

# Present Values of Fixed and Floating Legs
fixed_leg_pv = np.sum(fixed_cash_flows * np.array(discount_values_fixed))
floating_leg_pv = np.sum(floating_cash_flows * np.array(discount_values_floating))

# MTM Calculation
mtm_value = floating_leg_pv - fixed_leg_pv
print("Mark-to-Market (MTM) Value of the Swap:", mtm_value)

# MTM Over Time Calculation
min_length = min(len(discount_values_fixed), len(discount_values_floating))
mtm_values_over_time = []
for i in range(min_length):
    floating_leg_pv_time = np.sum(floating_cash_flows[:i + 1] * np.array(discount_values_floating)[:i + 1])
    fixed_leg_pv_time = np.sum(fixed_cash_flows[:i + 1] * np.array(discount_values_fixed)[:i + 1])
    mtm_values_over_time.append(floating_leg_pv_time - fixed_leg_pv_time)

# Plot MTM values over time
plt.figure(figsize=(10, 6))
plt.plot(range(len(mtm_values_over_time)), mtm_values_over_time, marker='o')
plt.title("Mark-to-Market (MTM) Value of the Swap Over Time")
plt.xlabel("Time Periods")
plt.ylabel("MTM Value")
plt.grid(True)
plt.show()
